import externalAssetController from "../Controllers/externalAsset.js";
import express from "express";

const router = express.Router();

/**
 * @swagger
 * /externalAsset/getAll:
 *   get:
 *     tags:
 *       - ExternalAsset
 *     summary: Get all external assets
 *     responses:
 *       '200':
 *         description: External assets fetched successfully
 */
router.get('/getAll', externalAssetController.getAllExternalAssets);

/**
 * @swagger
 * /externalAsset/getById:
 *   get:
 *     tags:
 *       - ExternalAsset
 *     summary: Get an external asset by ID
 *     parameters:
 *       - name: id
 *         in: query
 *         required: true
 *         schema:
 *           type: string
 *     responses:
 *       '200':
 *         description: External asset fetched successfully
 */
router.get('/getById', externalAssetController.getExternalAssetById);

/**
 * @swagger
 * /externalAsset/create:
 *   post:
 *     tags:
 *       - ExternalAsset
 *     summary: Create an external asset record
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required: [assetId, brand, model, serialNumber, warrantyStart, warrantyEnd]
 *             properties:
 *               brand:
 *                 type: string
 *                 example: Canon
 *               model:
 *                 type: string
 *                 example: LBP6030
 *               serialNumber:
 *                 type: string
 *                 example: EX-SN-001
 *               warrantyStart:
 *                 type: string
 *                 format: date
 *                 example: 2024-01-01
 *               warrantyEnd:
 *                 type: string
 *                 format: date
 *                 example: 2025-12-31
 *     responses:
 *       '201':
 *         description: External asset created successfully
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                 data:
 *                   $ref: '#/components/schemas/ExternalAsset'
 */
router.post('/create', externalAssetController.createExternalAsset);

/**
 * @swagger
 * /externalAsset/update:
 *   put:
 *     tags:
 *       - ExternalAsset
 *     summary: Update an external asset record
 *     parameters:
 *       - name: id
 *         in: query
 *         required: true
 *         schema:
 *           type: string
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             description: Fields to update; only include fields that need changes
 *             properties:
 *               assetId:
 *                 type: integer
 *                 description: References Asset.id generated by Sequelize
 *                 example: 1
 *               brand:
 *                 type: string
 *               model:
 *                 type: string
 *               serialNumber:
 *                 type: string
 *               warrantyStart:
 *                 type: string
 *                 format: date
 *               warrantyEnd:
 *                 type: string
 *                 format: date
 *     responses:
 *       '200':
 *         description: External asset updated successfully
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                 data:
 *                   $ref: '#/components/schemas/ExternalAsset'
 */
router.put('/update', externalAssetController.updateExternalAsset);

/**
 * @swagger
 * /externalAsset/delete:
 *   delete:
 *     tags:
 *       - ExternalAsset
 *     summary: Delete an external asset record
 *     parameters:
 *       - name: id
 *         in: query
 *         required: true
 *         schema:
 *           type: string
 *     responses:
 *       '200':
 *         description: External asset deleted successfully
 */
router.delete('/delete', externalAssetController.deleteExternalAsset);

export default router;


